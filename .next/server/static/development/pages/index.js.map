{"version":3,"file":"static/development/pages/index.js","sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/assign.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/define-property.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-descriptor.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-symbols.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/keys.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/values.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread.js","webpack:///./pages/GlobalGivingMap.js","webpack:///./pages/ListView.js","webpack:///./pages/MapView.js","webpack:///./pages/Project.js","webpack:///./pages/Projects.js","webpack:///./pages/index.js","webpack:///./redux/actions.js","webpack:///./redux/configureStore.js","webpack:///./redux/reducers.js","webpack:///./utils/API.js","webpack:///external \"@material-ui/core/Button\"","webpack:///external \"@material-ui/core/Drawer\"","webpack:///external \"@material-ui/core/List\"","webpack:///external \"@material-ui/core/ListItem\"","webpack:///external \"@material-ui/core/ListItemText\"","webpack:///external \"@material-ui/core/Menu\"","webpack:///external \"@material-ui/core/MenuItem\"","webpack:///external \"@material-ui/core/styles\"","webpack:///external \"axios\"","webpack:///external \"core-js/library/fn/object/assign\"","webpack:///external \"core-js/library/fn/object/define-property\"","webpack:///external \"core-js/library/fn/object/get-own-property-descriptor\"","webpack:///external \"core-js/library/fn/object/get-own-property-symbols\"","webpack:///external \"core-js/library/fn/object/keys\"","webpack:///external \"core-js/library/fn/object/values\"","webpack:///external \"prop-types\"","webpack:///external \"react\"","webpack:///external \"react-container-dimensions\"","webpack:///external \"react-motion\"","webpack:///external \"react-redux\"","webpack:///external \"react-simple-maps\"","webpack:///external \"redux\"","webpack:///external \"redux-logger\"","webpack:///external \"redux-thunk\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","module.exports = require(\"core-js/library/fn/object/assign\");","module.exports = require(\"core-js/library/fn/object/define-property\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptor\");","module.exports = require(\"core-js/library/fn/object/get-own-property-symbols\");","module.exports = require(\"core-js/library/fn/object/keys\");","module.exports = require(\"core-js/library/fn/object/values\");","import _Object$defineProperty from \"../../core-js/object/define-property\";\nexport default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    _Object$defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import _Object$getOwnPropertyDescriptor from \"../../core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"../../core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"../../core-js/object/keys\";\nimport defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    var ownKeys = _Object$keys(source);\n\n    if (typeof _Object$getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(_Object$getOwnPropertySymbols(source).filter(function (sym) {\n        return _Object$getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","\nimport React, { Component } from \"react\"\nimport {\n    ComposableMap,\n    ZoomableGroup,\n    Geographies,\n    Geography,\n    Markers,\n    Marker,\n} from \"react-simple-maps\"\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport ListView from './ListView'\nimport MapView from './MapView'\nimport {\n    initializeCountries,\n    fetchProjects,\n    fetchProjectsByCountry,\n    zoom,\n    zoomScale,\n    center,\n    setCurrentProject,\n    loadAllProjects\n} from '../redux/actions'\n\nclass GlobalGivingMap extends Component {\n    constructor(props) {\n        super(props)\n        this.handleZoomIn = this.handleZoomIn.bind(this)\n        this.handleZoomOut = this.handleZoomOut.bind(this)\n        this.handleReset = this.handleReset.bind(this)\n        this.handleCountryClick = this.handleCountryClick.bind(this)\n        this.dispatchCountry = this.dispatchCountry.bind(this)\n        this.handleClickProject = this.handleClickProject.bind(this)\n        this.handleClickLoadMore = this.handleClickLoadMore.bind(this)\n    }\n\n    //When component mounts, get initial 50 countries\n    //and initialize static list of countries from /static/countries.json\n    componentDidMount() {\n        this.props.dispatch(fetchProjects())\n        //dispatching initialize countries\n        this.props.dispatch(initializeCountries())\n    }\n\n    handleZoomIn() {\n        this.props.dispatch(zoomScale(1.5))\n    }\n    \n    handleZoomOut() {\n        this.props.dispatch(zoomScale(.75))\n    }\n\n    handleClickProject(project) {\n        this.props.dispatch(setCurrentProject(project))\n        this.props.dispatch(zoom(10))\n        this.props.dispatch(center([project.longitude, project.latitude]))\n    }\n\n    handleCountryClick(country) {\n        this.dispatchCountry(country.id)\n    }\n\n    dispatchCountry(threeLetterCountryCode) {\n        this.props.dispatch(fetchProjectsByCountry(threeLetterCountryCode))\n    }\n\n    handleReset() {\n        this.props.dispatch(zoom(.7))\n        this.props.dispatch(center([0, 20]))\n        this.props.dispatch(loadAllProjects())\n    }\n\n    handleClickLoadMore() {\n        const { data, map } = this.props\n        if (data.currentCountry !== undefined) {\n            this.props.dispatch(fetchProjectsByCountry(data.currentCountry.alpha3))\n        } else {\n            this.props.dispatch(fetchProjects())\n        }\n    }\n\n    render() {\n        const { data, map } = this.props\n        return (\n            <div>\n                <button onClick={this.handleZoomIn}>{\"Zoom in\"}</button>\n                <button onClick={this.handleZoomOut}>{\"Zoom out\"}</button>\n                <button onClick={this.handleReset}>{\"Reset\"}</button>\n                <MapView\n                    width={this.props.width}\n                    data={data}\n                    map={map}\n                    handleCountryClick={this.handleCountryClick}\n                    handleClickProject={this.handleClickProject}\n                    />\n                <ListView \n                    width={this.props.width * .15}\n                    data={data}\n                    handleClickLoadMore={this.handleClickLoadMore}\n                    handleClickProject={this.handleClickProject}\n                    dispatchCountry={this.dispatchCountry}\n                    viewAllProjects={this.handleReset}\n                />\n            </div>\n        )\n    }\n}\n\n//ensures dispatch function is initialized upon instantiation \nGlobalGivingMap.propTypes = {\n    dispatch: PropTypes.func.isRequired\n}\n\n//Redux will dispatch current app state\n//so this will simply map the dispatched state\n//to the component's props \nfunction mapDispatchToProps(state) {\n    const { data, map } = state\n    return state\n}\n\nexport default connect(mapDispatchToProps)(GlobalGivingMap)\n","\nimport React, { Component } from \"react\"\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Projects from './Projects'\n\nclass ListView extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        let data = this.props.data\n\n        //ListView utilizes the permanent draw component and List component from Material UI \n        return (\n            <Drawer\n                variant=\"permanent\"\n                anchor=\"right\"\n            >\n                <h1> Projects </h1>\n                {\n                    // If the user is looking at a country or a project, display button that\n                    // takes user back to view all projects\n                    (this.props.data.currentCountry || this.props.data.currentProject) &&\n                    <Button variant=\"contained\" onClick={this.props.viewAllProjects} >\n                        View all Projects\n                    </Button>\n                }\n                <List width={this.props.width}>\n                    {\n                        data.currentCountry !== undefined &&\n                        <h2>\n                            {data.currentCountry.country}\n                        </h2>\n                    }\n                    <Projects \n                        data={data}\n                        handleClickProject={this.props.handleClickProject}\n                        dispatchCountry={this.props.dispatchCountry}\n                        handleClickLoadMore={this.props.handleClickLoadMore} />\n                </List>\n            </Drawer>\n        )\n    }\n}\n\nexport default ListView\n","\nimport React, { Component } from \"react\"\nimport {\n    ComposableMap,\n    ZoomableGroup,\n    Geographies,\n    Geography,\n    Markers,\n    Marker,\n} from \"react-simple-maps\"\nimport { Motion, spring } from \"react-motion\"\n\n//This utilizes the svg map view built into react-simple-maps library \nclass MapView extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        let data = this.props.data\n        let map = this.props.map\n        return (\n            <div style={{width: this.props.width}}>\n            {/*This is a built-in library that gives the \"bouncing\" effect when a user clicks \n            on a country and the map zooms in */}\n            <Motion\n                defaultStyle={{\n                    zoom: 5,\n                    x: 0,\n                    y: 20,\n                }}\n                style={{\n                    zoom: spring(map.zoom, { stiffness: 210, damping: 20 }),\n                    x: spring(map.center[0], { stiffness: 210, damping: 20 }),\n                    y: spring(map.center[1], { stiffness: 210, damping: 20 }),\n                }}\n            >\n                {({ zoom, x, y }) => (\n                    <ComposableMap\n                        projectionConfig={{ scale: 205 }}\n                        style={{\n                            width: (this.props.width * .8),\n                            height: \"auto\",\n                        }}\n                    >\n                        <ZoomableGroup center={[x, y]} zoom={zoom}>\n                            <Geographies geography=\"/static/world-50m.json\">\n                                {(geographies, projection) =>\n                                    geographies.map((geography, i) =>\n                                        geography.id !== \"ATA\" && (\n                                            <Geography\n                                                key={i}\n                                                geography={geography}\n                                                projection={projection}\n                                                onClick={this.props.handleCountryClick}\n                                                style={{\n                                                    default: {\n                                                        fill: \"#ECEFF1\",\n                                                        stroke: \"#607D8B\",\n                                                        strokeWidth: 0.75,\n                                                        outline: \"none\",\n                                                    },\n                                                    hover: {\n                                                        fill: \"#607D8B\",\n                                                        stroke: \"#607D8B\",\n                                                        strokeWidth: 0.75,\n                                                        outline: \"none\",\n                                                    },\n                                                    pressed: {\n                                                        fill: \"#ECEFF1\",\n                                                        stroke: \"#607D8B\",\n                                                        strokeWidth: 0.75,\n                                                        outline: \"none\",\n                                                    },\n                                                }}\n                                            />\n                                        ))}\n                            </Geographies>\n                            \n                            <Markers>\n                                {\n                                    //now simply map all the projects to an svg marker on the map, passing the project's coordinates\n                                    data &&\n                                    Object.values(data.projects).map((project, i) => {\n                                        let p = { 'key': project.id, 'name': project.title, 'coordinates': [project.longitude, project.latitude] }\n                                        let style = {\n                                            default: { stroke: \"#455A64\" },\n                                            hover: { stroke: \"#FF5722\" },\n                                            pressed: { stroke: \"#FF5722\" },\n                                        }\n                                        if (data.currentProject !== undefined && data.currentProject.id == project.id) {\n                                            style = {\n                                                default: { stroke: \"#FF5722\" },\n                                                hover: { stroke: \"#FF5722\" },\n                                                pressed: { stroke: \"#FF5722\" },\n                                            }\n                                        }\n                                        return (\n                                            <Marker key={i} marker={p}\n                                                style={style}\n                                                onClick={() => {\n                                                    this.props.handleClickProject(project)\n                                                }}>\n\n                                                <g transform=\"translate(-12, -24)\">\n                                                    <path\n                                                        fill=\"none\"\n                                                        strokeWidth=\"2\"\n                                                        strokeLinecap=\"square\"\n                                                        strokeMiterlimit=\"10\"\n                                                        strokeLinejoin=\"miter\"\n                                                        d=\"M20,9c0,4.9-8,13-8,13S4,13.9,4,9c0-5.1,4.1-8,8-8S20,3.9,20,9z\"\n                                                    />\n                                                    <circle\n                                                        fill=\"none\"\n                                                        strokeWidth=\"2\"\n                                                        strokeLinecap=\"square\"\n                                                        strokeMiterlimit=\"10\"\n                                                        strokeLinejoin=\"miter\"\n                                                        cx=\"12\"\n                                                        cy=\"9\"\n                                                        r=\"3\"\n                                                    />\n                                                </g>\n                                            </Marker>)\n                                    })\n                                }\n                            </Markers>\n                        </ZoomableGroup>\n                    </ComposableMap>\n                )}\n            </Motion>\n            </div>\n        )\n    }\n}\nexport default MapView\n","\nimport React, { Component } from \"react\"\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Button from '@material-ui/core/Button';\n\nclass Project extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        let project = this.props.project\n        return (\n            <div>\n                <h4>{project.title}</h4>\n                <img src={project.imageLink} />\n                <ListItemText primary={'Country'} secondary={project.country} />\n                <ListItemText primary={'Goal'} secondary={'$' + project.goal} />\n                <ListItemText primary={'Funding'} secondary={'$' + project.funding} />\n            </div>\n        )\n    }\n}\n\nexport default Project\n","\nimport React, { Component } from \"react\"\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Button from '@material-ui/core/Button';\nimport Project from './Project'\nclass Projects extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        let data = this.props.data\n        return (\n            <div>\n                {\n                    data.currentProject !== undefined &&\n                    <h3> Projects </h3>\n                }\n                {\n                    data.currentProjects.length > 0 &&\n                    data.currentProjects.map((el, index) => (\n                        <ListItem onClick={() => this.props.handleClickProject(el)} button key={el.id}>\n                            <Project data={this.props.data} project={el} dispatchCountry={this.props.dispatchCountry} />\n                        </ListItem>\n                    ))\n                }\n                {\n                    data.currentProject &&\n                    <Button variant=\"contained\" onClick={() => { this.props.dispatchCountry(data.currentCountry.alpha3) }} >\n                        View all Projects in {this.props.data.currentProject.country}\n                    </Button>\n                }\n                {\n                    data.currentProjects.length <= 0 &&\n                    <ListItem >\n                        <ListItemText primary={\"No projects\"} />\n                    </ListItem>\n                }\n                {\n                    data.currentProject === undefined &&\n                    <Button variant=\"contained\" onClick={this.props.handleClickLoadMore} >\n                        Load More\n                    </Button>\n                }\n            </div>\n        )\n    }\n}\n\nexport default Projects\n","import React, { Component } from 'react'\nimport { Provider } from 'react-redux'\nimport configureStore from '../redux/configureStore'\nimport GlobalGivingMap from './GlobalGivingMap'\nimport ContainerDimensions from 'react-container-dimensions'\n\nconst store = configureStore()\n\nexport default class Root extends Component {\n  render() {\n    return (\n      //configure Redux store\n      <Provider store={store}>\n        {/*Container Dimensions is a React library that allows you to access container width&height*/}\n        <ContainerDimensions> \n          <GlobalGivingMap />\n        </ContainerDimensions>\n      </Provider>\n    )\n  }\n}","import API from '../utils/API'\nimport { API_KEY } from '../utils/API'\nimport request from 'axios'\nexport const INITIALIZE_COUNTRIES = 'INITIALIZE_COUNTRIES'\nexport const ADD_PROJECTS = 'ADD_PROJECTS'\nexport const LOAD_ALL_PROJECTS = 'LOAD_ALL_PROJECTS'\nexport const SET_CURRENT_PROJECT = 'SET_CURRENT_PROJECT'\nexport const SET_CURRENT_PROJECTS = 'SET_CURRENT_PROJECTS'\nexport const SET_CURRENT_COUNTRY = 'SET_CURRENT_COUNTRY'\nexport const ZOOM = 'ZOOM'\nexport const ZOOM_SCALE = 'ZOOM_SCALE'\nexport const CENTER = 'CENTER'\n\nexport const initializeCountries = () => {\n    let countries = []\n    return (dispatch) => {\n        return request\n            .get(\"/static/countries.json\")\n            .then(res => {\n                countries = res.data.ref_country_codes.map(country => {\n                    let countryTemp = country;\n                    countryTemp['latlng'] = [country.longitude, country.latitude]\n                    return countryTemp\n                })\n                console.log(countries)\n                dispatch(countriesInitialized(countries))\n            })\n    }\n};\n\nfunction transformResponse(data) {\n    let d = data.projects;\n    d[\"project\"] = d.project.filter(el => {\n        return el.latitude !== undefined && el.longitude !== undefined;\n    });\n    return d;\n}\n\nexport let fetchProjects = () => {\n    console.log('fetching projects')\n\n    return (dispatch, getState) => {\n        const state = getState();\n        let params = {\n            api_key: API_KEY\n        }\n\n        if (state.data.nextProjectIds['default'] > 0) {\n            params = {\n                api_key: API_KEY,\n                nextProjectId: state.data.nextProjectIds['default']\n            }\n        }\n\n        return API.get(\"/public/projectservice/all/projects/active\", {\n            params: params,\n            transformResponse: [transformResponse]\n        })\n            .then(response => {\n                dispatch(projectsFetched(response.data));\n            },\n            err => {\n                console.log(err);\n            })\n            .then(() => {\n                const state = getState();\n                if (Object.keys(state.data.projects).length <= 50 &&\n                    state.data.nextProjectIds['default'] > 0) {\n                    dispatch(fetchProjects())\n                }\n            });\n    };\n};\n\nexport const fetchProjectsByCountry = (threeLetterCountryCode) => {\n    console.log('fetching projects by country')\n    \n    return (dispatch, getState) => {\n        const state = getState();\n        console.log(threeLetterCountryCode)\n        let countryObj = state.data.countries.find(el => {\n            return el.alpha3 === threeLetterCountryCode\n        })\n\n        console.log(countryObj)\n        dispatch(setCountry(countryObj))\n\n        const countryCode = countryObj.alpha2;\n        let params = {\n            api_key: API_KEY\n        }\n\n        //query state map storing next project id by country name\n        //and add next project id to request if it exists\n        if (state.data.nextProjectIds[countryObj.country] > 0) {\n            params = {\n                api_key: API_KEY,\n                nextProjectId: state.data.nextProjectIds[countryObj.country]\n            }\n        }\n        return API.get('/public/projectservice/countries/' + countryCode + '/projects/active', {\n            params: params,\n            transformResponse: [transformResponse]\n        })\n            .then(response => {\n                dispatch(projectsFetched(response.data));\n            },\n            err => {\n                console.log(err);\n            })\n    };\n};\n\nexport const projectsFetched = projects => {\n    return {\n        type: ADD_PROJECTS,\n        projects: projects.project,\n        nextProjectId: projects.nextProjectId\n    };\n};\n\nexport const setCountry = country => {\n    return {\n        type: SET_CURRENT_COUNTRY,\n        country: country\n    };\n};\n\nexport const setCurrentProject = project => {\n    return {\n        type: SET_CURRENT_PROJECT,\n        project: project\n    };\n};\n\nexport let loadAllProjects = () => {\n    return {\n        type: LOAD_ALL_PROJECTS\n    }\n}\n\nexport const zoom = (zoom) => {\n    return {\n        type: ZOOM,\n        zoom: zoom\n    }\n}\n\nexport const zoomScale = (scale) => {\n    return {\n        type: ZOOM_SCALE,\n        scale: scale\n    }\n}\n\nexport const center = (center) => {\n    return {\n        type: CENTER,\n        center\n    }\n}\n\nexport const countriesInitialized = (countries) => {\n    return {\n        type: INITIALIZE_COUNTRIES,\n        countries\n    };\n}","import { createStore, applyMiddleware } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport { createLogger } from 'redux-logger'\nimport rootReducer from './reducers'\n\nconst loggerMiddleware = createLogger()\n\nexport default function configureStore(preloadedState) {\n  return createStore(\n    rootReducer,\n    preloadedState,\n    applyMiddleware(thunkMiddleware, loggerMiddleware)\n  )\n}","import { combineReducers } from 'redux'\nimport React from \"react\"\n\nimport {\n  INITIALIZE_COUNTRIES,\n  LOAD_ALL_PROJECTS,\n  ADD_PROJECTS,\n  SET_CURRENT_COUNTRY,\n  SET_CURRENT_PROJECT,\n  SET_CURRENT_PROJECTS,\n  ZOOM,\n  ZOOM_SCALE,\n  CENTER\n} from './actions'\n\nconst initialState = {\n  projects: {}, //all currently loaded projects indexed by project id \n  currentProjects: [], //all currently viewed projects in list view\n  currentProject: undefined, //currently viewed project object \n  countries: [], //all preloaded country information\n  currentCountry: undefined, //currently viewed country\n  nextProjectIds: {}, //save next project id. indexed by country except for default \n                      //case, where the index will be stored as 'default'\n}\n\nfunction data(state = initialState, action) {\n  switch (action.type) {\n    case INITIALIZE_COUNTRIES:\n      return {\n        ...state,\n        countries: action.countries\n      }\n\n    case ADD_PROJECTS:\n\n      //add projects\n      var addProjects = Object.assign({}, state.projects)\n      action.projects.forEach(el => { addProjects[el.id] = el })\n\n      // Set next project ids \n      var nextProjectId = action.nextProjectId ? action.nextProjectId : -1\n      var ids = Object.assign({}, state.nextProjectIds)\n      if (state.currentCountry !== undefined) {\n        ids[state.currentCountry.country] = nextProjectId\n      } else {\n        ids['default'] = nextProjectId\n      }\n\n      return {\n        ...state,\n\n        projects: addProjects,\n\n        // If current country is currently defined, ensure \n        // current projects is filtered by country code \n        currentProjects: state.currentCountry !== undefined ?\n          Object.values(addProjects).filter(el => {\n            return el.iso3166CountryCode === state.currentCountry.alpha2\n          }) : Object.values(addProjects),\n\n        nextProjectIds: ids\n      }\n\n    //Set current country:\n      // - Filter all previously loaded projects by country code and set to current projects\n      // - Initialize nextProjectIds[country] if necessary \n    case SET_CURRENT_COUNTRY:\n\n      var ids = Object.assign({}, state.nextProjectIds)\n      if (ids[action.country.country] === undefined) {\n        ids[action.country.country] = -1\n      }\n\n      return {\n        ...state,\n        currentProjects: Object.values(state.projects).filter(el => {\n          return el.iso3166CountryCode === action.country.alpha2\n        }),\n        currentProject: undefined,\n        nextProjectIds: ids,\n        currentCountry: action.country,\n      }\n\n    //Set current project\n    case SET_CURRENT_PROJECT:\n\n      return {\n        ...state,\n        currentProjects: [action.project],\n        currentProject: action.project,\n        currentCountry: state.countries.find(el => {\n          return el.alpha2 === action.project.iso3166CountryCode\n        })\n      }\n\n    //Set all previously loaded projects into currentProjects to be updated in list view\n    case LOAD_ALL_PROJECTS:\n\n      return {\n        ...state,\n        currentProjects: Object.values(state.projects),\n        currentProject: undefined,\n        currentCountry: undefined\n      }\n\n    default:\n      return state\n  }\n}\n\nfunction map(state = { zoom: .7, center: [0, 20] }, action) {\n  switch (action.type) {\n    //zoom into map on set current country (this means user clicked a country)\n    case SET_CURRENT_COUNTRY:\n      console.log(action)\n      return {\n        ...state,\n        zoom: 5,\n        center: [action.country.latlng[0], action.country.latlng[1]]\n      }\n    case CENTER:\n      return {\n        ...state,\n        center: action.center\n      }\n    case ZOOM_SCALE:\n      return {\n        ...state,\n        zoom: action.scale * state.zoom\n      }\n    case ZOOM:\n      return {\n        ...state,\n        zoom: action.zoom\n      }\n    default:\n      return state\n  }\n}\n\nconst rootReducer = combineReducers({\n  data, map\n})\n\nexport default rootReducer","import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"https://api.globalgiving.org/api\",\n  responseType: \"json\"\n});\n\nexport const API_KEY = '2556f972-549a-439c-928b-240a82a4dd1c'","module.exports = require(\"@material-ui/core/Button\");","module.exports = require(\"@material-ui/core/Drawer\");","module.exports = require(\"@material-ui/core/List\");","module.exports = require(\"@material-ui/core/ListItem\");","module.exports = require(\"@material-ui/core/ListItemText\");","module.exports = require(\"@material-ui/core/Menu\");","module.exports = require(\"@material-ui/core/MenuItem\");","module.exports = require(\"@material-ui/core/styles\");","module.exports = require(\"axios\");","module.exports = require(\"core-js/library/fn/object/assign\");","module.exports = require(\"core-js/library/fn/object/define-property\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptor\");","module.exports = require(\"core-js/library/fn/object/get-own-property-symbols\");","module.exports = require(\"core-js/library/fn/object/keys\");","module.exports = require(\"core-js/library/fn/object/values\");","module.exports = require(\"prop-types\");","module.exports = require(\"react\");","module.exports = require(\"react-container-dimensions\");","module.exports = require(\"react-motion\");","module.exports = require(\"react-redux\");","module.exports = require(\"react-simple-maps\");","module.exports = require(\"redux\");","module.exports = require(\"redux-logger\");","module.exports = require(\"redux-thunk\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACxFA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACrlFA;AACA;AACA;AAmFA;AACA;AAIA;AACA;AACA;AAPA;AACA;AAMA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA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","sourceRoot":""}